import { Platform, PlayerData } from "./@types/player";
import { Mode, ModeProperties } from "./@types/mode";
import { GlobalStatProperties } from "./@types/stat";
import { Weapon, WeaponProperties, Equip, EquipProperties, Item } from "./@types/item";
import { Streak, StreakProperties } from "./@types/streak";
declare namespace Wrapzone {
    export const authenticate: (email: string, password: string) => Promise<void>;
    class Wrapzone {
        private platform;
        private userName;
        private playerData;
        constructor(platform: Platform, userName: string, playerData: PlayerData);
        /**
         * Fetches the playerdata and saves it in the instance
         * @param platform The platform the player is on
         * @param userName The name of the user (battle.net also requires id, e.g. name#12345)
         */
        setPlayerData(platform: Platform, userName: string): Promise<void>;
        /**
         * Re-runs the initial request in order to get updated data
         */
        updatePlayerData(): Promise<void>;
        /**
         * Returns the raw json that was retrieved from the cod API
         */
        get raw(): object;
        getModeStats(mode: Mode): ModeProperties | undefined;
        getGlobalStats(): GlobalStatProperties;
        getEquipStats(equip: Equip): EquipProperties | undefined;
        getWeaponStats(weapon: Weapon): WeaponProperties | undefined;
        getItemStats(item: Item): EquipProperties | WeaponProperties | undefined;
        getStreakStats(streak: Streak): StreakProperties | undefined;
    }
    export const get: (platform: Platform, userName: string) => Promise<Wrapzone>;
    export {};
}
export default Wrapzone;
